// src/app/verify/rubric/page.tsx
import { createServerComponentClient } from '@supabase/auth-helpers-nextjs';
import { cookies } from 'next/headers';
import { CheckCircle, XCircle, Bot } from 'lucide-react';
import Link from 'next/link';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table"; // We'll need our table component

// ... (Interface definitions for rubric data)

export default async function RubricVerificationPage({ searchParams }: { searchParams: { id: string } }) {
    const cookieStore = await cookies();
    const supabase = createServerComponentClient({ cookies: () => cookieStore });
    const rubricId = searchParams.id;
    let rubric: any = null; // Simplified type for brevity
    let errorMessage: string | null = null;

    if (rubricId) {
        const { data, error } = await supabase.from('rubrics').select('*').eq('id', rubricId).single();
        if (error || !data) { errorMessage = "No rubric found for this ID."; } else { rubric = data; }
    } else { errorMessage = "No ID provided."; }

    return (
        <div className="min-h-screen bg-gray-50 flex flex-col items-center p-8">
            <main className="w-full max-w-4xl bg-white p-10 rounded-xl shadow-md border">
                <div className="flex justify-between items-center pb-4 border-b">
                    <div><h1 className="text-3xl font-bold">Rubric Verification</h1><p className="text-gray-500">Authenticity report from LearnBridgeEdu.</p></div>
                    <Link href="/" className="flex items-center gap-2 font-semibold"><Bot /><span>LearnBridgeEdu</span></Link>
                </div>
                {rubric ? (
                    <>
                        <div className="mt-6 flex items-center gap-3 p-4 bg-green-50 text-green-800 rounded-lg"><CheckCircle className="h-8 w-8" /><div><h2 className="font-semibold">Document Verified</h2><p className="text-sm">This is an authentic rubric generated by our AI platform.</p></div></div>
                        <div className="mt-6 space-y-4">
                            <h3 className="text-xl font-semibold border-b pb-2">Rubric Details</h3>
                            <div className="grid grid-cols-2 gap-4 text-sm">
                                <div><strong>Subject:</strong> {rubric.subject}</div>
                                <div><strong>Class:</strong> {rubric.grade}</div>
                                <div className="col-span-2"><strong>Task:</strong> {rubric.task_description}</div>
                            </div>
                            <Table className="mt-4">
                                <TableHeader><TableRow><TableHead>Criteria</TableHead><TableHead>Excellent</TableHead><TableHead>Proficient</TableHead><TableHead>Developing</TableHead><TableHead>Points</TableHead></TableRow></TableHeader>
                                <TableBody>{rubric.rubric_data.rubricCriteria.map((row: any, index: number) => (<TableRow key={index}><TableCell className="font-semibold">{row.criteria}</TableCell><TableCell>{row.excellent}</TableCell><TableCell>{row.proficient}</TableCell><TableCell>{row.developing}</TableCell><TableCell className="font-bold">{row.points}</TableCell></TableRow>))}</TableBody>
                            </Table>
                        </div>
                    </>
                ) : (
                    <div className="mt-6 flex items-center gap-3 p-4 bg-red-50 text-red-800 rounded-lg"><XCircle className="h-8 w-8" /><div><h2 className="font-semibold">Verification Failed</h2><p className="text-sm">{errorMessage}</p></div></div>
                )}
            </main>
        </div>
    );
}
