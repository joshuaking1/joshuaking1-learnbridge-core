// src/app/verify/page.tsx
import { createServerComponentClient } from '@supabase/auth-helpers-nextjs';
import { cookies } from 'next/headers';
import Image from 'next/image';
import Link from 'next/link';

// Define the structure of our assessment data for TypeScript
interface AssessmentData {
  items: any[];
  topic: string;
  grade: string;
}

interface AssessmentRecord {
  id: string;
  created_at: string;
  assessment_data: AssessmentData;
}

export default async function VerificationPage({
  searchParams,
}: {
  searchParams: { id: string };
}) {
    const cookieStore = await cookies();
    const supabase = createServerComponentClient({ cookies: () => cookieStore });
    const assessmentId = searchParams.id;
    let assessment: AssessmentRecord | null = null;
    let errorMessage: string | null = null;

    if (assessmentId) {
        const { data, error } = await supabase
            .from('assessments')
            .select('id, created_at, assessment_data')
            .eq('id', assessmentId)
            .single();

        if (error || !data) {
            errorMessage = "No assessment record found for the provided ID.";
        } else {
            assessment = data as AssessmentRecord;
        }
    } else {
        errorMessage = "No assessment ID was provided.";
    }

    return (
        <div className="min-h-screen bg-gray-50 flex flex-col items-center p-4 sm:p-8">
            <main className="w-full max-w-4xl bg-white p-6 sm:p-10 rounded-xl shadow-md border">
                <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center pb-4 border-b">
                    <div>
                        <h1 className="text-2xl sm:text-3xl font-bold text-gray-800">Assessment Verification</h1>
                        <p className="text-gray-500">Authenticity report for a document generated by LearnBridgeEdu.</p>
                    </div>
                     <Link href="/" className="flex items-center gap-2 font-semibold mt-4 sm:mt-0">
                        <Image 
                            src="/LearnBridge logo inverted croped.png" 
                            alt="LearnBridge Logo" 
                            width={24} 
                            height={24} 
                            className="object-contain"
                        />
                        <span>LearnBridgeEdu</span>
                    </Link>
                </div>
                
                {assessment ? (
                    <>
                        <div className="mt-6 flex items-center gap-3 p-4 bg-green-50 text-green-800 border border-green-200 rounded-lg">
                            <CheckCircle className="h-8 w-8" />
                            <div>
                                <h2 className="font-semibold">Document Verified</h2>
                                <p className="text-sm">This document is an authentic assessment generated by our AI platform.</p>
                            </div>
                        </div>
                        <div className="mt-6 space-y-4">
                            <h3 className="text-xl font-semibold border-b pb-2">Assessment Details</h3>
                            <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
                                <div><strong>ID:</strong> <code className="text-xs p-1 bg-gray-100 rounded">{assessment.id}</code></div>
                                <div><strong>Topic:</strong> {assessment.assessment_data.topic}</div>
                                <div><strong>Class:</strong> {assessment.assessment_data.grade}</div>
                                <div><strong>Generated On:</strong> {new Date(assessment.created_at).toLocaleString()}</div>
                            </div>
                            
                            <div className="pt-4">
                                <h4 className="font-semibold mb-2">Generated Questions:</h4>
                                <div className="space-y-4">
                                    {assessment.assessment_data.items.map((item, index) => (
                                         <div key={index} className="p-3 border rounded-md bg-gray-50 text-sm">
                                            <div className="flex justify-between items-center text-xs text-gray-500 mb-1">
                                                <span>Type: {item.type.toUpperCase()}</span>
                                                <span>DoK Level: {item.dok}</span>
                                            </div>
                                            <p>{item.question || item.prompt}</p>
                                        </div>
                                    ))}
                                </div>
                            </div>
                        </div>
                    </>
                ) : (
                    <div className="mt-6 flex items-center gap-3 p-4 bg-red-50 text-red-800 border border-red-200 rounded-lg">
                        <XCircle className="h-8 w-8" />
                        <div>
                            <h2 className="font-semibold">Verification Failed</h2>
                            <p className="text-sm">{errorMessage}</p>
                        </div>
                    </div>
                )}
            </main>
        </div>
    );
}